[supervisord]
logfile=/dev/stdout
logfile_maxbytes = 0
loglevel=%(ENV_SD_LOGLEVEL)s
nodaemon=true
user=root
group=root

[unix_http_server]
file=/var/tmp/supervisor.sock
chmod=0766

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/tmp/supervisor.sock

#################################################################################
# Has the solely task of polling your meter, to perform and store any readings. #
# Either us the datalogger or remote datalogger.                                #
#################################################################################
[program:dsmr_datalogger]
command=/usr/local/bin/python3 -u /dsmr/manage.py dsmr_datalogger
directory=/dsmr/
autostart=%(ENV_SD_AUTOSTART_DATALOGGER)s
autorestart=%(ENV_SD_AUTORESTART_DATALOGGER)s
startsecs=1
redirect_stderr=true
logfile=/dev/stdout
stdout_logfile_maxbytes=0

#################################################################################
# Has the solely task of polling your meter, to perform and store any readings  #
# remotely. Either us the datalogger or remote datalogger.                      #
#################################################################################
[program:dsmr_remote_datalogger]
command=/usr/local/bin/python3 -u /dsmr/dsmr_datalogger_api_client.py
directory=/dsmr/
autostart=%(ENV_SD_AUTOSTART_REMOTE_DATALOGGER)s
autorestart=%(ENV_SD_AUTORESTART_REMOTE_DATALOGGER)s
numprocs=1
startsecs=1
redirect_stderr=true
logfile=/dev/stdout
stdout_logfile_maxbytes=0

###################################################################################
# Used to run complex tasks in the background, such as: generating stats, backups #
# and any (optional) third party integrations. Processes readings retroactively.  #
###################################################################################
[program:dsmr_backend]
environment=PYTHONUNBUFFERED=1
command=/usr/local/bin/python3 -u /dsmr/manage.py dsmr_backend
directory=/dsmr/
autostart=%(ENV_SD_AUTOSTART_BACKEND)s
autorestart=%(ENV_SD_AUTORESTART_BACKEND)s
numprocs=1
startsecs=1
redirect_stderr=true
logfile=/dev/stdout
stdout_logfile_maxbytes=0

########################################
# The webinterface of the application  #
########################################
[program:dsmr_webinterface]
environment=PYTHONUNBUFFERED=1
command=gunicorn dsmrreader.wsgi --timeout 60 --max-requests 500 --bind unix:/var/tmp/gunicorn--%(program_name)s.socket
directory=/dsmr/
autostart=%(ENV_SD_AUTOSTART_WEBINTERFACE)s
autorestart=%(ENV_SD_AUTORESTART_WEBINTERFACE)s
numprocs=1
startsecs=3
redirect_stderr=true
logfile=/dev/stdout
stdout_logfile_maxbytes=0

######################################################
# Nginx proxy to the webinterface of the application #
######################################################
[program:nginx]
command=/usr/sbin/nginx -g 'daemon off;'
autostart=%(ENV_SD_AUTOSTART_WEBINTERFACE)s
autorestart=%(ENV_SD_AUTORESTART_WEBINTERFACE)s
numprocs=1
startsecs=5
redirect_stderr=true
logfile=/dev/stdout
stdout_logfile_maxbytes=0

######################################################
# Send kill signal properly                          #
######################################################
[eventlistener:processes]
command=bash -c "printf 'READY\n' && while read line; do kill -SIGQUIT ${PPID}; done < /dev/stdin"
events=PROCESS_STATE_STOPPED,PROCESS_STATE_EXITED,PROCESS_STATE_FATAL